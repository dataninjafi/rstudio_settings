snippet li
	library(${1:package})
snippet lib
	library(${1:package})
snippet src
	source("${1:file.R}")
snippet if
	if (${1:condition}) {
		${0}
	}
snippet el
	else {
		${0}
	}
snippet fun
	${1:name} <- function(${2:variables}) {
		${0}
	}
snippet for
	for (${1:variable} in ${2:vector}) {
		${0}
	}
snippet while
	while (${1:condition}) {
		${0}
	}
snippet switch
	switch (${1:object},
		${2:case} = ${3:action}
	)
snippet apply
	apply(${1:array}, ${2:margin}, ${3:...})
snippet lapply
	lapply(${1:list}, ${2:function})
snippet sapply
	sapply(${1:list}, ${2:function})
snippet mapply
	mapply(${1:function}, ${2:...})
snippet tapply
	tapply(${1:vector}, ${2:index}, ${3:function})
snippet vapply
	vapply(${1:list}, ${2:function}, FUN.VALUE = ${3:type}, ${4:...})
snippet rapply
	rapply(${1:list}, ${2:function})
snippet ts
	`r paste("#", date(), "------------------------------\n")`
snippet shinyapp
	library(shiny)
	
	ui <- fluidPage(
	  ${0}
	)
	
	server <- function(input, output, session) {
	  
	}
	
	shinyApp(ui, server)
snippet shinymod
	${1:name}_UI <- function(id) {
	  ns <- NS(id)
	  tagList(
		${0}
	  )
	}
	
	${1:name} <- function(input, output, session) {
	  
	}
# packages
snippet had
	library(tidyverse)
snippet ins
	install.packages("${1:package}")
snippet _w
	"${1:character}"${0}
# usual structures
snippet cod
	`${1:code}`
snippet saf
	stringsAsFactors = FALSE
snippet in
	${1:content} %in% ${2:content2}
snippet eq
	${1:content} == ${2:content}
snippet is
	${1:content} = ${2:content}
snippet gl
	glimpse(${1:data})
snippet ga
	pivot_longer(
				cols = ${1:include_or_exclude_pivot_colums},
				names_to = "${2:col_name}",
				values_to = "${3:col_name}",
				values_drop_na = FALSE)
)
snippet longer
	pivot_longer(
				cols = ${1:include_or_exclude_pivot_colums},
				names_to = "${2:col_name}",
				values_to = "${3:col_name}",
				values_drop_na = FALSE)
)
snippet wider
	pivot_wider(names_from = "${1:include_or_exclude_pivot_colums}"",
							values_from = "${2:col_name}", 
							values_fill = NULL)
snippet sp
	spread(${1:varNameCol}, ${2:values})
snippet lj
	left_join(${1:table})
snippet rj
	right_join(${1:table})
snippet mu
	mutate(${1:action})
snippet fi
	filter(${1:action})
snippet fil
	filter(${1:action})
snippet su
	summarise(${1:action})
snippet fi
	filter(${1:rule})
snippet in
	${1:action} %in% ${2:action} 
snippet sde
	str_detect(${1:sarake}, "${2:regex}"${3:, negate = TRUE})
snippet se
	select(${1:action})
snippet sei
	select_if(${1:action})
snippet gr
	group_by(${1:action})
snippet by
	group_by(${1:action})
snippet ar
	arrange(${1:action})
snippet .a
	${1:action} <- ${2:action}${0}
snippet as
	${1:action} <- ${2:action}${0}
snippet mm
	%>%
	${0}
snippet p
	${1:first} + ${2:second}
snippet s
	${1:element1} < ${2:element2}
snippet se
	${1:element1} <= ${2:element2}
snippet b
	f${1:element1} > ${2:element2})
snippet be
	${1:element1} >= ${2:element2})
snippet not
	${1:element1} != ${2:element2}
snippet i_e
	if_else(${1:action}, 
					${2:yes}, 
					${3:no}, 
					missing = ${4:NULL})
# functions
snippet ano
	function(${1:parameters}) ${2:actions}
# ggplot
snippet gg
	ggplot(aes(${1:parameters} )) + ${2:actions}
# View .lastvalue
snippet lvv
	`r eval(View(.Last.value))`
snippet lv
	`r eval(View(.Last.value))`
# Glimpse .lastvalue
snippet lvg
	glimpse(.Last.value)
snippet lg
	glimpse(.Last.value)
# skim.lastvalue
snippet ls
	skimr::skim(.Last.value)
# dm prod
snippet dm_prod
	my_db <- DBI::dbConnect(odbc::odbc(), 
													dsn = "snowflake_dm_prod", 
													uid = Sys.getenv("ALUSTA_KAYTTAJA"), 
													pwd = Sys.getenv("ALUSTA_PASSU"))
# ewd prod
snippet edw_prod
	my_db <- DBI::dbConnect(odbc::odbc(), 
													dsn = "snowflake_edw_prod", 
													uid = Sys.getenv("ALUSTA_KAYTTAJA"), 
													pwd = Sys.getenv("ALUSTA_PASSU"))
# analytics
snippet analytics_prod
my_db <- DBI::dbConnect(odbc::odbc(), 
                        dsn = "snowflake_analytics_prod", 
                        uid = Sys.getenv("ALUSTA_KAYTTAJA"), 
                        pwd = Sys.getenv("ALUSTA_PASSU"))
snippet followed_by
	(?=)
snippet not_followed_by
	(?!)
snippet preceeded_by
	(?<=)
snippet not_preceeded_by
	(?<!)
